"Root type for all query operations."
type Query {
  allStarships(after: String, first: Int, before: String, last: Int): StarshipsConnection
  starship(id: ID!): Starship

  "Fetches an object given its ID."
  node(
    "The ID of an object."
    id: ID!
  ): Node
}

"An object with an ID."
interface Node {
  "The id of the object."
  id: ID!
}

"Information about pagination in a connection."
type PageInfo {
  "When paginating forwards, are there more items?"
  hasNextPage: Boolean!

  "When paginating backwards, are there more items?"
  hasPreviousPage: Boolean!

  "When paginating backwards, the cursor to continue."
  startCursor: String

  "When paginating forwards, the cursor to continue."
  endCursor: String
}

"An individual person or character within the Star Wars universe."
type Person implements Node {
  "The ID of this person."
  id: ID!

  "The name of this person."
  name: String

  """
  The birth year of the person, using the in-universe standard of BBY or ABY -
  Before the Battle of Yavin or After the Battle of Yavin. The Battle of Yavin is
  a battle that occurs at the end of Star Wars episode IV: A New Hope.
  """
  birthYear: String

  """
  The eye color of this person. Will be "unknown" if not known or "n/a" if the
  person does not have an eye.
  """
  eyeColor: String

  """
  The gender of this person. Either "Male", "Female" or "unknown",
  "n/a" if the person does not have a gender.
  """
  gender: String

  """
  The hair color of this person. Will be "unknown" if not known or "n/a" if the
  person does not have hair.
  """
  hairColor: String

  "The height of the person in centimeters."
  height: Int

  "The mass of the person in kilograms."
  mass: Float

  "The skin color of this person."
  skinColor: String

  starshipConnection(after: String, first: Int, before: String, last: Int): PersonStarshipsConnection

  "The ISO 8601 date format of the time that this resource was created."
  created: String

  "The ISO 8601 date format of the time that this resource was edited."
  edited: String
}

"A connection to a list of items."
type PersonStarshipsConnection {
  "Information to aid in pagination."
  pageInfo: PageInfo!

  "A list of edges."
  edges: [PersonStarshipsEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  starships: [Starship]
}

"An edge in a connection."
type PersonStarshipsEdge {
  "The item at the end of the edge."
  node: Starship

  "A cursor for use in pagination."
  cursor: String!
}

"A single transport craft that has hyperdrive capability."
type Starship implements Node {
  "The ID of this starship."
  id: ID!

  "The name of this starship. The common name, such as “Death Star”."
  name: String

  """
  The model or official name of this starship. Such as "T-65 X-wing" or "DS-1
  Orbital Battle Station".
  """
  model: String

  """
  The class of this starship, such as "Starfighter" or "Deep Space Mobile
  Battlestation"
  """
  starshipClass: String

  "The manufacturers of this starship."
  manufacturers: [String]

  "The cost of this starship new, in galactic credits."
  costInCredits: Float

  "The length of this starship in meters."
  length: Float

  "The number of personnel needed to run or pilot this starship."
  crew: String

  "The number of non-essential people this starship can transport."
  passengers: String

  """
  The maximum speed of this starship in atmosphere. null if this starship is
  incapable of atmosphering flight.
  """
  maxAtmospheringSpeed: Int

  "The class of this starships hyperdrive."
  hyperdriveRating: Float

  """
  The Maximum number of Megalights this starship can travel in a standard hour.
  A "Megalight" is a standard unit of distance and has never been defined before
  within the Star Wars universe. This figure is only really useful for measuring
  the difference in speed of starships. We can assume it is similar to AU, the
  distance between our Sun (Sol) and Earth.
  """
  MGLT: Int

  "The maximum number of kilograms that this starship can transport."
  cargoCapacity: Float

  """
  The maximum length of time that this starship can provide consumables for its
  entire crew without having to resupply.
  """
  consumables: String
  pilotConnection(after: String, first: Int, before: String, last: Int): StarshipPilotsConnection

  "The ISO 8601 date format of the time that this resource was created."
  created: String

  "The ISO 8601 date format of the time that this resource was edited."
  edited: String
}

"A connection to a list of items."
type StarshipPilotsConnection {
  "Information to aid in pagination."
  pageInfo: PageInfo!

  "A list of edges."
  edges: [StarshipPilotsEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  pilots: [Person]
}

"An edge in a connection."
type StarshipPilotsEdge {
  "The item at the end of the edge."
  node: Person

  "A cursor for use in pagination."
  cursor: String!
}

"A connection to a list of items."
type StarshipsConnection {
  "Information to aid in pagination."
  pageInfo: PageInfo!

  "A list of edges."
  edges: [StarshipsEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  starships: [Starship]
}

"An edge in a connection."
type StarshipsEdge {
  "The item at the end of the edge."
  node: Starship

  "A cursor for use in pagination."
  cursor: String!
}